{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:5000\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass ScareBnBApi {\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${ShareBnBApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers,\n        withCredentials: true\n      })).data;\n    } catch (err) {\n      console.log(\"unobstructed error message\", err);\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API Routes\n  //#####################################################################\n  // LISTING ROUTES\n\n  /** Get listings */\n  static async getListingsForGuest() {\n    console.debug(\"Token being sent:\", ShareBnBApi.token);\n    console.log(\"getListingsForGuest\");\n    let res = await this.request(`guest/listings`);\n    return res.listings;\n  }\n  static async getListings(user_id) {\n    let res = await this.request(`user/${user_id}/favorites`);\n    return res.listings;\n  }\n\n  /** Get details for listing on a listing id */\n\n  static async getListing(id) {\n    let res = await this.request(`listing/${id}`);\n    return res.listing;\n  }\n\n  /**Create new listing */\n\n  static async createListing(data) {\n    let res = await this.request(`listing`, data, \"post\");\n    return res.listing;\n  }\n\n  //#####################################################################\n  // USER ROUTES\n\n  /** User signup */\n\n  static async signup(data) {\n    let res = await this.request(`signup`, data, \"post\");\n    this.token = res.token;\n    return res;\n  }\n\n  /** User login */\n\n  static async login(data) {\n    let res = await this.request(`login`, data, \"post\");\n    this.token = res.token;\n    return res;\n  }\n\n  /** User is Guest */\n  static async is_guest() {\n    console.log(\"is_guest\");\n    let res = await this.request(`guest`, data, \"get\");\n    this.token = res.token;\n    return res;\n  }\n}\nScareBnBApi.token = '';\nexport default ScareBnBApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","ScareBnBApi","request","endpoint","data","method","console","debug","url","headers","Authorization","ShareBnBApi","token","params","withCredentials","err","log","error","response","message","Array","isArray","getListingsForGuest","res","listings","getListings","user_id","getListing","id","listing","createListing","signup","login","is_guest"],"sources":["/Users/taylorhood/Documents/Projects/ScareBnB/Scarebnb-frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:5000\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass ScareBnBApi {\n    \n    static token = '';\n\n    static async request(endpoint, data = {}, method = \"get\") {\n        console.debug(\"API Call:\", endpoint, data, method);\n    \n        const url = `${BASE_URL}/${endpoint}`;\n        const headers = { Authorization: `Bearer ${ShareBnBApi.token}` };\n        const params = (method === \"get\")\n          ? data\n          : {};\n    \n        try {\n          return (await axios({ url, method, data, params, headers, withCredentials: true})).data;\n        } catch (err) {\n            console.log(\"unobstructed error message\", err)\n            console.error(\"API Error:\", err.response);\n            let message = err.response.data.error.message;\n            throw Array.isArray(message) ? message : [message];\n        }\n    }\n\n    // Individual API Routes\n//#####################################################################\n// LISTING ROUTES\n\n    /** Get listings */\n    static async getListingsForGuest() {\n        console.debug(\"Token being sent:\", ShareBnBApi.token);\n        console.log(\"getListingsForGuest\")\n        let res = await this.request(`guest/listings`);\n        return res.listings;\n    }\n\n    static async getListings(user_id) {\n        let res = await this.request(`user/${user_id}/favorites`);\n        return res.listings;\n    }\n\n    /** Get details for listing on a listing id */\n\n    static async getListing(id) {\n        let res = await this.request(`listing/${id}`);\n        return res.listing;\n    }\n\n    /**Create new listing */\n\n    static async createListing(data) {\n        let res = await this.request(`listing`, data, \"post\");\n        return res.listing;\n    }\n\n\n//#####################################################################\n// USER ROUTES\n\n    /** User signup */\n\n    static async signup(data) {\n        let res = await this.request(`signup`, data, \"post\");\n        this.token = res.token\n        return res;\n    }\n\n    /** User login */\n\n    static async login(data) {\n        let res = await this.request(`login`, data, \"post\");\n        this.token = res.token\n        return res;\n    }\n\n    /** User is Guest */\n    static async is_guest() {\n        console.log(\"is_guest\")\n        let res = await this.request(`guest`, data, \"get\");\n        this.token = res.token\n        return res;\n    }\n\n\n}\n\nexport default ScareBnBApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}